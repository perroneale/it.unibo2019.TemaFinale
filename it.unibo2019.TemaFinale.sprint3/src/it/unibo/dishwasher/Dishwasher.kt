/* Generated by AN DISI Unibo */ 
package it.unibo.dishwasher

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Dishwasher ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("Dishwasher STARTED")
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("waitCmd") { //this:State
					action { //it:State
					}
					 transition(edgeName="t046",targetState="getting",cond=whenDispatch("getDishesDish"))
					transition(edgeName="t047",targetState="putting",cond=whenDispatch("putDishesDish"))
				}	 
				state("getting") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("getDishes(ND,NB,NP)"), Term.createTerm("getDishes(ND,NB,NP)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								var ND = payloadArg(0).toInt()
												var NB = payloadArg(1).toInt()
												var NP = payloadArg(2).toInt()
											itunibo.appliance.Dishwasher.getDishwasher().putDishes(ND,NB,NP)
											println(itunibo.appliance.Dishwasher.getDishwasher().toString())
						}
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("putting") { //this:State
					action { //it:State
						itunibo.appliance.Dishwasher.getDishwasher().getDishes()
									println(itunibo.appliance.Dishwasher.getDishwasher().toString())
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
			}
		}
}
