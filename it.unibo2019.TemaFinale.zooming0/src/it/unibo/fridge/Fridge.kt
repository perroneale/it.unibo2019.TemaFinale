/* Generated by AN DISI Unibo */ 
package it.unibo.fridge

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Fridge ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("Fridge STARTED")
						println("----FRIDGE : omunico al maitre il mio contenuto")
						forward("currentFood", "currentFood(lista)" ,"maitre" ) 
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("waitCmd") { //this:State
					action { //it:State
					}
					 transition(edgeName="t020",targetState="checking",cond=whenDispatch("foodAvailability"))
					transition(edgeName="t021",targetState="updatingTf",cond=whenDispatch("takeFood"))
					transition(edgeName="t022",targetState="updatingPf",cond=whenDispatch("putFood"))
				}	 
				state("checking") { //this:State
					action { //it:State
						forward("positiveResponse", "positiveResponse" ,"butler" ) 
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("updatingTf") { //this:State
					action { //it:State
					}
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
				state("updatingPf") { //this:State
					action { //it:State
					}
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
			}
		}
}
