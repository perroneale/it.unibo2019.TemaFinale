/* Generated by AN DISI Unibo */ 
package it.unibo.butlerresourcemodel

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Butlerresourcemodel ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						solve("consult('sysRules.pl')","") //set resVar	
						solve("consult('resourceModelButler.pl')","") //set resVar	
						println("###RESOURCEMODEL STARTED---")
					}
					 transition( edgeName="goto",targetState="waitModelChange", cond=doswitch() )
				}	 
				state("waitModelChange") { //this:State
					action { //it:State
					}
					 transition(edgeName="t00",targetState="handleModelChange",cond=whenDispatch("modelChangeTask"))
					transition(edgeName="t01",targetState="handleModelChange",cond=whenDispatch("modelChangeAction"))
					transition(edgeName="t02",targetState="handleModelChange",cond=whenDispatch("modelChangePos"))
				}	 
				state("handleModelChange") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("modelChangeTask(DEST,TASK,IDCIBO,QUANTITY)"), Term.createTerm("modelChangeTask(robot,TASK,IDCIBO,QUANTITY)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								itunibo.robot.resourceModelSupport.updateModelTask(myself ,payloadArg(1), payloadArg(2), payloadArg(3) )
						}
						if( checkMsgContent( Term.createTerm("modelChangeAction(DEST,ACTION)"), Term.createTerm("modelChangeAction(robot,ACTION)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								itunibo.robot.resourceModelSupport.updateModelAction(myself ,payloadArg(1) )
						}
						if( checkMsgContent( Term.createTerm("modelChangePos(DEST,POSITION)"), Term.createTerm("modelChangePos(robot,POS)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								itunibo.robot.resourceModelSupport.updateModelPosition(myself ,payloadArg(1) )
						}
					}
					 transition( edgeName="goto",targetState="waitModelChange", cond=doswitch() )
				}	 
			}
		}
}
